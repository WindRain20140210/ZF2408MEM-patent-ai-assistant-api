# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Trend2Req(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, industry: str=None, area: str=None, applicant: str=None):  # noqa: E501
        """Trend2Req - a model defined in Swagger

        :param industry: The industry of this Trend2Req.  # noqa: E501
        :type industry: str
        :param area: The area of this Trend2Req.  # noqa: E501
        :type area: str
        :param applicant: The applicant of this Trend2Req.  # noqa: E501
        :type applicant: str
        """
        self.swagger_types = {
            'industry': str,
            'area': str,
            'applicant': str
        }

        self.attribute_map = {
            'industry': 'industry',
            'area': 'area',
            'applicant': 'applicant'
        }
        self._industry = industry
        self._area = area
        self._applicant = applicant

    @classmethod
    def from_dict(cls, dikt) -> 'Trend2Req':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Trend2Req of this Trend2Req.  # noqa: E501
        :rtype: Trend2Req
        """
        return util.deserialize_model(dikt, cls)

    @property
    def industry(self) -> str:
        """Gets the industry of this Trend2Req.


        :return: The industry of this Trend2Req.
        :rtype: str
        """
        return self._industry

    @industry.setter
    def industry(self, industry: str):
        """Sets the industry of this Trend2Req.


        :param industry: The industry of this Trend2Req.
        :type industry: str
        """

        self._industry = industry

    @property
    def area(self) -> str:
        """Gets the area of this Trend2Req.


        :return: The area of this Trend2Req.
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area: str):
        """Sets the area of this Trend2Req.


        :param area: The area of this Trend2Req.
        :type area: str
        """

        self._area = area

    @property
    def applicant(self) -> str:
        """Gets the applicant of this Trend2Req.


        :return: The applicant of this Trend2Req.
        :rtype: str
        """
        return self._applicant

    @applicant.setter
    def applicant(self, applicant: str):
        """Sets the applicant of this Trend2Req.


        :param applicant: The applicant of this Trend2Req.
        :type applicant: str
        """

        self._applicant = applicant
