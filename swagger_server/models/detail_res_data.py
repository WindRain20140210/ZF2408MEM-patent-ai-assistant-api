# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DetailResData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, type: str=None, sub_title: str=None, content: str=None, data: str=None, status: int=None, is_deleted: int=None):  # noqa: E501
        """DetailResData - a model defined in Swagger

        :param type: The type of this DetailResData.  # noqa: E501
        :type type: str
        :param sub_title: The sub_title of this DetailResData.  # noqa: E501
        :type sub_title: str
        :param content: The content of this DetailResData.  # noqa: E501
        :type content: str
        :param data: The data of this DetailResData.  # noqa: E501
        :type data: str
        :param status: The status of this DetailResData.  # noqa: E501
        :type status: int
        :param is_deleted: The is_deleted of this DetailResData.  # noqa: E501
        :type is_deleted: int
        """
        self.swagger_types = {
            'type': str,
            'sub_title': str,
            'content': str,
            'data': str,
            'status': int,
            'is_deleted': int
        }

        self.attribute_map = {
            'type': 'type',
            'sub_title': 'sub_title',
            'content': 'content',
            'data': 'data',
            'status': 'status',
            'is_deleted': 'is_deleted'
        }
        self._type = type
        self._sub_title = sub_title
        self._content = content
        self._data = data
        self._status = status
        self._is_deleted = is_deleted

    @classmethod
    def from_dict(cls, dikt) -> 'DetailResData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DetailRes_data of this DetailResData.  # noqa: E501
        :rtype: DetailResData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this DetailResData.


        :return: The type of this DetailResData.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this DetailResData.


        :param type: The type of this DetailResData.
        :type type: str
        """

        self._type = type

    @property
    def sub_title(self) -> str:
        """Gets the sub_title of this DetailResData.


        :return: The sub_title of this DetailResData.
        :rtype: str
        """
        return self._sub_title

    @sub_title.setter
    def sub_title(self, sub_title: str):
        """Sets the sub_title of this DetailResData.


        :param sub_title: The sub_title of this DetailResData.
        :type sub_title: str
        """

        self._sub_title = sub_title

    @property
    def content(self) -> str:
        """Gets the content of this DetailResData.


        :return: The content of this DetailResData.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this DetailResData.


        :param content: The content of this DetailResData.
        :type content: str
        """

        self._content = content

    @property
    def data(self) -> str:
        """Gets the data of this DetailResData.


        :return: The data of this DetailResData.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data: str):
        """Sets the data of this DetailResData.


        :param data: The data of this DetailResData.
        :type data: str
        """

        self._data = data

    @property
    def status(self) -> int:
        """Gets the status of this DetailResData.


        :return: The status of this DetailResData.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this DetailResData.


        :param status: The status of this DetailResData.
        :type status: int
        """

        self._status = status

    @property
    def is_deleted(self) -> int:
        """Gets the is_deleted of this DetailResData.


        :return: The is_deleted of this DetailResData.
        :rtype: int
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted: int):
        """Sets the is_deleted of this DetailResData.


        :param is_deleted: The is_deleted of this DetailResData.
        :type is_deleted: int
        """

        self._is_deleted = is_deleted
