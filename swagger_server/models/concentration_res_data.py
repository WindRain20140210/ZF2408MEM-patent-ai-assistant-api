# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ConcentrationResData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, year: str=None, proportion: float=None):  # noqa: E501
        """ConcentrationResData - a model defined in Swagger

        :param year: The year of this ConcentrationResData.  # noqa: E501
        :type year: str
        :param proportion: The proportion of this ConcentrationResData.  # noqa: E501
        :type proportion: float
        """
        self.swagger_types = {
            'year': str,
            'proportion': float
        }

        self.attribute_map = {
            'year': 'year',
            'proportion': 'proportion'
        }
        self._year = year
        self._proportion = proportion

    @classmethod
    def from_dict(cls, dikt) -> 'ConcentrationResData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConcentrationRes_data of this ConcentrationResData.  # noqa: E501
        :rtype: ConcentrationResData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def year(self) -> str:
        """Gets the year of this ConcentrationResData.


        :return: The year of this ConcentrationResData.
        :rtype: str
        """
        return self._year

    @year.setter
    def year(self, year: str):
        """Sets the year of this ConcentrationResData.


        :param year: The year of this ConcentrationResData.
        :type year: str
        """

        self._year = year

    @property
    def proportion(self) -> float:
        """Gets the proportion of this ConcentrationResData.


        :return: The proportion of this ConcentrationResData.
        :rtype: float
        """
        return self._proportion

    @proportion.setter
    def proportion(self, proportion: float):
        """Sets the proportion of this ConcentrationResData.


        :param proportion: The proportion of this ConcentrationResData.
        :type proportion: float
        """

        self._proportion = proportion
